package com.outdu.camconnect.ui.components.indicators

import androidx.compose.runtime.Composable
import androidx.compose.ui.geometry.Offset
import androidx.compose.ui.graphics.*
import androidx.compose.ui.graphics.vector.*
import androidx.compose.ui.unit.dp
import androidx.compose.ui.graphics.vector.PathParser
import com.outdu.camconnect.ui.theme.*

@Composable
fun aiIcon(isEnabled: Boolean): ImageVector {
    return ImageVector.Builder(
        name = "AiStatusVector",
        defaultWidth = 13.dp,
        defaultHeight = 13.dp,
        viewportWidth = 13f,
        viewportHeight = 13f
    ).apply {
        // Parse SVG pathData into PathNode list
        val nodes = PathParser().parsePathString(
            "M9.328,5.874L6.99,5.012L6.126,2.672C6.06,2.493 5.941,2.338 5.784,2.229C5.628,2.12 5.441,2.061 5.25,2.061C5.059,2.061 4.873,2.12 4.716,2.229C4.56,2.338 4.44,2.493 4.374,2.672L3.512,5.012L1.172,5.874C0.993,5.94 0.838,6.059 0.729,6.216C0.62,6.373 0.562,6.559 0.562,6.75C0.562,6.941 0.62,7.127 0.729,7.284C0.838,7.441 0.993,7.56 1.172,7.626L3.51,8.488L4.374,10.828C4.44,11.007 4.56,11.162 4.716,11.271C4.873,11.38 5.059,11.439 5.25,11.439C5.441,11.439 5.628,11.38 5.784,11.271C5.941,11.162 6.06,11.007 6.126,10.828L6.988,8.49L9.328,7.626C9.508,7.56 9.662,7.441 9.771,7.284C9.881,7.127 9.939,6.941 9.939,6.75C9.939,6.559 9.881,6.373 9.771,6.216C9.662,6.059 9.508,5.94 9.328,5.874ZM6.358,7.522C6.281,7.55 6.212,7.595 6.154,7.652C6.097,7.71 6.052,7.779 6.024,7.855L5.25,9.951L4.478,7.855C4.45,7.779 4.406,7.71 4.348,7.652C4.291,7.595 4.221,7.55 4.145,7.522L2.05,6.75L4.145,5.978C4.221,5.95 4.291,5.905 4.348,5.848C4.406,5.79 4.45,5.721 4.478,5.645L5.25,3.549L6.022,5.645C6.051,5.721 6.095,5.79 6.152,5.848C6.21,5.905 6.279,5.95 6.356,5.978L8.451,6.75L6.358,7.522ZM6.563,1.875C6.563,1.726 6.622,1.583 6.728,1.477C6.833,1.372 6.976,1.313 7.125,1.313H7.688V0.75C7.688,0.601 7.747,0.458 7.853,0.352C7.958,0.247 8.101,0.188 8.25,0.188C8.4,0.188 8.543,0.247 8.648,0.352C8.754,0.458 8.813,0.601 8.813,0.75V1.313H9.375C9.525,1.313 9.668,1.372 9.773,1.477C9.879,1.583 9.938,1.726 9.938,1.875C9.938,2.024 9.879,2.167 9.773,2.273C9.668,2.378 9.525,2.438 9.375,2.438H8.813V3C8.813,3.149 8.754,3.292 8.648,3.398C8.543,3.503 8.4,3.563 8.25,3.563C8.101,3.563 7.958,3.503 7.853,3.398C7.747,3.292 7.688,3.149 7.688,3V2.438H7.125C6.976,2.438 6.833,2.378 6.728,2.273C6.622,2.167 6.563,2.024 6.563,1.875ZM11.813,4.125C11.813,4.274 11.754,4.417 11.648,4.523C11.543,4.628 11.4,4.688 11.25,4.688H11.063V4.875C11.063,5.024 11.004,5.167 10.898,5.273C10.793,5.378 10.65,5.438 10.5,5.438C10.351,5.438 10.208,5.378 10.103,5.273C9.997,5.167 9.938,5.024 9.938,4.875V4.688H9.75C9.601,4.688 9.458,4.628 9.353,4.523C9.247,4.417 9.188,4.274 9.188,4.125C9.188,3.976 9.247,3.833 9.353,3.727C9.458,3.622 9.601,3.563 9.75,3.563H9.938V3.375C9.938,3.226 9.997,3.083 10.103,2.977C10.208,2.872 10.351,2.813 10.5,2.813C10.65,2.813 10.793,2.872 10.898,2.977C11.004,3.083 11.063,3.226 11.063,3.375V3.563H11.25C11.4,3.563 11.543,3.622 11.648,3.727C11.754,3.833 11.813,3.976 11.813,4.125Z"
        ).toNodes()

        addPath(
            pathData = nodes,
            fill = if (!isEnabled) {
                SolidColor(Gray)
            } else {
                Brush.linearGradient(
                    colors = listOf(AiGradientStart, AiGradientEnd),
                    start = Offset(2f, 3.5f),
                    end = Offset(7f, 12.5f)
                )
            },
            fillAlpha = 1.0f
        )
    }.build()
}

